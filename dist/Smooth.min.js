/**
 * Smooth v0.0.1
 * @author Vu Pham
 * @homepage https://github.com/vuquangpham/smooth.js
 * @license MIT 2023
 */
!function(t,n){if("object"==typeof exports&&"object"==typeof module)module.exports=n();else if("function"==typeof define&&define.amd)define([],n);else{var e=n();for(var i in e)("object"==typeof exports?exports:t)[i]=e[i]}}(this,(()=>(()=>{"use strict";var t={r:t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}},n={};function e(){return(arguments.length>0&&void 0!==arguments[0]?arguments[0]:"")+Date.now().toString(36)+Math.random().toString(36).slice(2)}t.r(n);const i=[{type:"linear",func:r}],o=r;function r(t){return t}const s=function(t,n){let e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:.05;return(1-e)*t+e*n};const c=t=>{if("boolean"==typeof t.timing&&t.timing)return!0;if("function"==typeof t.timing)return t.timing;if("string"!=typeof t.timing)return console.warn("Invalid timing function, using the default timing function"),o;const n=i.find((n=>n.type===t.timing));return n?n.func:(console.warn("Wrong type of timing function. Please check the docs again!"),console.warn("Using the default timing function (linear)"),o)},u=(t,n)=>{"function"==typeof t.onUpdate&&t.onUpdate({...t,progress:n,lerp:s})};return window.Smooth=new class{constructor(){this.instances=[]}create(t){const n={id:e("smooth-"),timing:o,duration:300,customTimeFraction:void 0,destroyWhenCompleted:!0,onUpdate:t=>{},...t};return n.destroy=this.destroy.bind(this,n),function(t){const n=t.duration,e=c(t),i=function(){const o=(arguments.length>0&&void 0!==arguments[0]?arguments[0]:0)-0;let r="object"==typeof t.customTimeFraction&&"number"==typeof t.customTimeFraction.value?t.customTimeFraction.value:Math.min(o/n,1);const s=!0===e?void 0:Math.min(1,e(r));u(t,s),1===s&&t.destroyWhenCompleted?t.destroy():!0!==t.destroy&&(t.timeout=requestAnimationFrame(i))};i()}(n),this.instances.push(n),n}get(t){return this.instances.find((n=>n.id===t))}destroy(t){const n=n=>n.id===t.id,e=this.instances.find(n);if(e){const i=this.instances.findIndex(n);return t.destroy=!0,cancelAnimationFrame(e.timeout),this.instances.splice(i,1),!0}return!1}},n})()));